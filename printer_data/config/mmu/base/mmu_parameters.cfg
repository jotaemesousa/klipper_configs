########################################################################################################################
# Happy Hare MMU Software
#
# Template file for MMU's with Servo Selector (Type-A designs like PicoMMU and MMX)
# This file omits selector and selector-servo parts of the configuration and a few other options that don't make sense
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# Copyright (C) 2022-2025  moggieuk#6538 (discord)
#                          moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Main configuration parameters for the klipper module
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#
# Notes:
#   Macro configuration is specified separately in 'mmu_macro_vars.cfg'.
#   Full details in https://github.com/moggieuk/Happy-Hare/tree/main/doc/configuration.md
#
[mmu]
happy_hare_version: 3.3			# Don't mess, used for upgrade detection

# MMU Hardware Limits --------------------------------------------------------------------------------------------------
# ██╗     ██╗███╗   ███╗██╗████████╗███████╗
# ██║     ██║████╗ ████║██║╚══██╔══╝██╔════╝
# ██║     ██║██╔████╔██║██║   ██║   ███████╗
# ██║     ██║██║╚██╔╝██║██║   ██║   ╚════██║
# ███████╗██║██║ ╚═╝ ██║██║   ██║   ███████║
# ╚══════╝╚═╝╚═╝     ╚═╝╚═╝   ╚═╝   ╚══════╝
#
# Define the physical limits of your MMU. These settings will be respected regardless of individual speed settings.
#
gear_max_velocity: 300			# Never to be exceeded gear velocity regardless of specific parameters
gear_max_accel: 1500			# Never to be exceeded gear acceleration regardless of specific parameters


# Selector servo configuration  ----------------------------------------------------------------------------------------
# ███████╗███████╗██████╗ ██╗   ██╗ ██████╗ 
# ██╔════╝██╔════╝██╔══██╗██║   ██║██╔═══██╗
# ███████╗█████╗  ██████╔╝██║   ██║██║   ██║
# ╚════██║██╔══╝  ██╔══██╗╚██╗ ██╔╝██║   ██║
# ███████║███████╗██║  ██║ ╚████╔╝ ╚██████╔╝
# ╚══════╝╚══════╝╚═╝  ╚═╝  ╚═══╝   ╚═════╝ 
#
# Selector servo positions are stored in `mmu_vars.cfg` after calibration.
# Note that the "release angle" is by default the nearest position between calibrated selection angles. This can be overriden
# by setting and explicit servo_release_angle
#
# Note that leaving the servo active when down can stress the electronics and is not recommended unless you have a good
# 5v power supply. Make sure your hardware is suitable for the job!
#
servo_duration: 0.6			# Duration of PWM burst sent to servo (default non-active mode, automatically turns off)
servo_dwell: 1.0			# Minimum time given to servo to complete movement prior to next move
servo_always_active: 0			# CAUTION: 1=Force servo to always stay active, 0=Release after movement
selector_gate_angles: 60,0,180,120	# Optionally set default list of gate angles (overriden by calibration)
selector_bypass_angle: -1		# Optionally set default servo angle when bypass is selected, -1=No default
selector_release_angle: -1		# Optionally force a specific "release" angle, -1=Default (between gate angles) behavior


# Logging --------------------------------------------------------------------------------------------------------------
# ██╗      ██████╗  ██████╗  ██████╗ ██╗███╗   ██╗ ██████╗ 
# ██║     ██╔═══██╗██╔════╝ ██╔════╝ ██║████╗  ██║██╔════╝ 
# ██║     ██║   ██║██║  ███╗██║  ███╗██║██╔██╗ ██║██║  ███╗
# ██║     ██║   ██║██║   ██║██║   ██║██║██║╚██╗██║██║   ██║
# ███████╗╚██████╔╝╚██████╔╝╚██████╔╝██║██║ ╚████║╚██████╔╝
# ╚══════╝ ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = stepper moves)
# Generally you can keep console logging to a minimal whilst still sending debug output to the mmu.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
# Note: that it is not recommended to keep logging at level greater that 2 (debug) if not debugging an issue because
# of the additional overhead
#
log_level: 1
log_file_level: 2			# Can also be set to -1 to disable log file completely
log_statistics: 1 			# 1 to log statistics on every toolchange (default), 0 to disable (but still recorded)
log_visual: 1				# 1 log visual representation of filament, 0 = disable
log_startup_status: 1			# Whether to log tool to gate status on startup, 1 = summary (default), 0 = disable
log_m117_messages: 1			# Whether send toolchange message via M117 to screen


# Movement speeds ------------------------------------------------------------------------------------------------------
# ███████╗██████╗ ███████╗███████╗██████╗ ███████╗
# ██╔════╝██╔══██╗██╔════╝██╔════╝██╔══██╗██╔════╝
# ███████╗██████╔╝█████╗  █████╗  ██║  ██║███████╗
# ╚════██║██╔═══╝ ██╔══╝  ██╔══╝  ██║  ██║╚════██║
# ███████║██║     ███████╗███████╗██████╔╝███████║
# ╚══════╝╚═╝     ╚══════╝╚══════╝╚═════╝ ╚══════╝
#
# Long moves are faster than the small ones and used for the bulk of the bowden movement. You can set two fast load speeds
# depending on whether pulling from the spool or filament buffer (if fitted and not the first time load). This can be helpful
# in allowing faster loading from buffer and slower when pulling from the spool because of the additional friction (prevents
# loosing steps). Unloading speed can be tuning if you have a rewinder system that imposes additional limits.
# NOTE: Encoder cannot keep up much above 450mm/s so make sure 'bowden_apply_correction' is off at very high speeds!
#
gear_from_spool_speed: 80               # mm/s Speed when loading from the spool (for the first time if has_filament_buffer: 1)
gear_from_spool_accel: 100              # Acceleration when loading from spool
gear_from_buffer_speed: 150             # mm/s Speed when loading filament from buffer. Conservative is 100mm/s, Max around 400mm/s
gear_from_buffer_accel: 400             # Normal acceleration when loading filament
gear_unload_speed: 80                   # mm/s Use (lower) speed when unloading filament (defaults to "from spool" speed)
