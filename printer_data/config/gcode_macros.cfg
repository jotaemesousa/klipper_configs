#[include gcode_spool_macros.cfg]

[gcode_macro START_PRINT]
gcode:

    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    SET_LED LED=printer_led WHITE=0.5 ; Switch on the light

    # Start bed heating
    M140 S{BED_TEMP}
    ; Prep surfaces before auto home for better accuracy
    M104 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}

    ; M413 S0 ; Disable power loss recovery
    G92 E0 ; Reset Extruder

    G28 ; Home all axes
    G1 Z10.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0 Y0

    # Wait for bed to reach temperature
    M190 S{BED_TEMP}

    BED_MESH_PROFILE LOAD=default

    G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
    G1 X0.1 Y100.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X0.4 Y100.0 Z0.3 F5000.0 ; Move to side a little
    G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X1 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

[gcode_macro END_PRINT]
gcode:
    {% set MAX_Y = params.MAX_Y|default(200)|float %}
    G91 ;Relative positioning
    G1 E-2 F2700 ;Retract a bit
    G1 E-2 Z0.2 F2400 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z10 ;Raise Z more
    G90 ;Absolute positioning

    G1 X0 Y{MAX_Y} ;Present print
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed

    M84 X Y E ;Disable all steppers but Z

    SET_LED LED=printer_led WHITE=0.0 ; Switch off the light
    
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30 ; wait for temp to reach lower values and shutdown printer
    

[gcode_macro QUERY_AMBIENT_AIR]
gcode:
    {% set sensor = printer["bme280 ambient_air"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Pressure: %.2f hPa\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.pressure,
            sensor.humidity))}


[gcode_macro _POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method(
    "set_device_power", device="WallPlug", state="off"
  )}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state